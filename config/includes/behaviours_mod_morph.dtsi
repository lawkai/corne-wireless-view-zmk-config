/ {
    behaviors {
        bspcdel: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BDEL";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_RALT)>;
        };

        mm_tab_esc: tab_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "TAB_ESC";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp TAB>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
        
        /*
         * Shifted Return underscores + Layer Tap
         *
         * Usage: &mm_ret_unds_layer
         * Tap: Space
         * LShift-Tap: -
         * RShift-Tap: _
         * Hold: Switch layer
         */
        mm_ret_minus_layer: mod_morph_minus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&lt LOWER RET>, <&kp MINUS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        /*
         * Shifted Space equal + Layer Tap
         *
         * Usage: &mm_spc_eq_layer
         * Tap: Space
         * LShift-Tap: +
         * RShift-Tap: =
         * Hold: Switch layer
         */
        mm_spc_eq_layer: mod_morph_equal {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&lst LOWER SPACE>, <&kp EQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };
    };
    
};