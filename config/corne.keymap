/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    retro-tap;
    quick-tap-ms = <100>;
    tapping-term-ms = <300>;
};

&mt { retro-tap; };

/ {
    behaviors {
        bspcdel: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BDEL";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;

            mods = <(MOD_LGUI|MOD_LSFT|MOD_RGUI|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lshftcl: LSHIFT_CAPS_LOCK {
            compatible = "zmk,behavior-tap-dance";
            label = "LSHIFT_CAPS_LOCK";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>, <&kp CLCK>;
        };

        rshftcl: RSHIFT_CAPS_LOCK {
            compatible = "zmk,behavior-tap-dance";
            label = "RSHIFT_CAPS_LOCK";
            #binding-cells = <0>;
            bindings = <&sk RSHFT>, <&kp CLCK>;
        };

        lshftm1: lshftm1 {
            compatible = "zmk,behavior-tap-dance";
            label = "LSHFTM1";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&tog 1>;
        };

        rshiftm2: rshiftm2 {
            compatible = "zmk,behavior-tap-dance";
            label = "RSHIFTM2";
            #binding-cells = <0>;
            bindings = <&kp RSHIFT>, <&tog 2>;
        };
    };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        conn_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&gresc        &kp Q  &kp W  &kp E             &kp R     &kp T      &kp Y      &kp U      &kp I          &kp O    &kp P     &bspcdel
&mt LGUI TAB  &kp A  &kp S  &kp D             &kp F     &kp G      &kp H      &kp J      &kp K          &kp L    &kp SEMI  &mt RCTRL SQT
&sl 1         &kp Z  &kp X  &kp C             &kp V     &kp B      &kp N      &kp M      &kp COMMA      &kp DOT  &kp FSLH  &lt 2 BSLH
                            &kp LEFT_CONTROL  &lshftm1  &kp RET    &kp SPACE  &rshiftm2  &kp RIGHT_ALT
            >;
        };

        lower_layer {
            bindings = <
&trans     &kp F1        &kp F2          &kp F3            &kp F4                &kp F5       &kp F6    &kp F7                 &kp F8             &kp F9           &kp F10    &trans
&kp GRAVE  &kp NUMBER_1  &kp NUMBER_2    &kp NUMBER_3      &kp NUMBER_4          &kp N5       &kp N6    &kp N7                 &kp N8             &kp N9           &kp N0     &none
&trans     &kp UNDER     &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp MINUS    &kp PLUS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp EQUAL  &trans
                                         &trans            &trans                &trans       &trans    &trans                 &trans
            >;

            label = "Lower";
        };

        raise_layer {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none     &kp UP    &none      &none  &none
&none  &none  &none  &none  &none  &none    &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &trans
&none  &none  &none  &none  &none  &none    &none  &none     &none     &none      &none  &none
                     &none  &none  &none    &none  &trans    &none
            >;

            label = "Raise";
        };

        misc_layer {
            label = "Misc";
            bindings = <
&out OUT_BLE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none   &none  &none  &none  &none
&out OUT_USB  &none         &none         &none         &none         &none           &none  &none   &none  &none  &none  &none
&bt BT_CLR    &none         &none         &none         &none         &none           &none  &none   &none  &none  &none  &none
                                          &none         &tog 1        &none           &none  &tog 2  &none
            >;
        };
    };
};
